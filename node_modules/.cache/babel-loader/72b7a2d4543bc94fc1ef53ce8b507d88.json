{"ast":null,"code":"import { ref } from 'vue';\nimport useDocument from '../composables/useDocument';\nexport default {//   props: ['playlist'],\n  //   setup(props) {\n  //     const title = ref('')\n  //     const artist = ref('')\n  //     const showForm = ref(false)\n  //     const { updateDoc } = useDocument('playlists', props.playlist.id)\n  //     const handleSubmit = async () => {\n  //       const newSong = {\n  //         title: title.value,\n  //         artist: artist.value,\n  //         id: Math.floor(Math.random() * 1000000)\n  //       }\n  //       const res = await updateDoc({\n  //         songs: [...props.playlist.songs, newSong]\n  //       })\n  //       title.value = ''\n  //       artist.value = ''\n  //     }\n  //     return { title, artist, showForm, handleSubmit }\n  //   }\n};","map":{"version":3,"mappings":"AAcA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,eAAe,CACf;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAtBe,CAAf","names":["ref","useDocument"],"sourceRoot":"","sources":["/home/saumya/Documents/Project.Tech/project-tech/src/components/AddProject.vue"],"sourcesContent":["<template>\n  <div class=\"add-song\">\n    <!-- <button v-if=\"!showForm\" @click=\"showForm = true\">Add Songs</button> -->\n    <!-- <form v-if=\"showForm\" @submit.prevent=\"handleSubmit\"> -->\n    <form>\n      <h4>Add a New Project</h4>\n      <input type=\"text\" placeholder=\"Project title\" required v-model=\"title\">\n      <input type=\"text\" placeholder=\"Project codebase Link\" required v-model=\"link\">\n      <button>Add</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useDocument from '../composables/useDocument'\n\nexport default {\n//   props: ['playlist'],\n//   setup(props) {\n//     const title = ref('')\n//     const artist = ref('')\n//     const showForm = ref(false)\n//     const { updateDoc } = useDocument('playlists', props.playlist.id)\n\n//     const handleSubmit = async () => {\n//       const newSong = {\n//         title: title.value,\n//         artist: artist.value,\n//         id: Math.floor(Math.random() * 1000000)\n//       }\n//       const res = await updateDoc({\n//         songs: [...props.playlist.songs, newSong]\n//       })\n//       title.value = ''\n//       artist.value = ''\n//     }\n\n//     return { title, artist, showForm, handleSubmit }\n//   }\n}\n</script>\n\n<style scoped>\n  .add-song {\n    text-align: center;\n    margin-top: 40px;\n  }\n  form {\n    max-width: 100%;\n    text-align: left;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}