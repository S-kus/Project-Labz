{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Login\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Log in\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.password]]), _ctx.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.error), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _hoisted_3, _createCommentVNode(\" <button v-if=\\\"isPending\\\" disabled>Loading</button> \")], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;;AAGkBC,OAAK,EAAC;;;gCACxBD,oBAAuB,QAAvB,EAAuB,IAAvB,EAAQ,QAAR,EAAc;AAAA;AAAd;;;uBALFE,oBAOO,MAPP,EAOO;AAPAC,YAAM,wDAAUC,+CAAV,EAAsB,WAAtB;AAON,GAPP,GACEC,4BACAL,oBAAwD,OAAxD,EAAwD;AAAjDM,QAAI,EAAC,OAA4C;AAApCC,eAAW,EAAC,OAAwB;+DAAPH,aAAKI;AAAE,GAAxD;;AAAA,oBAAiDJ,+BACjDJ,oBAAiE,OAAjE,EAAiE;AAA1DM,QAAI,EAAC,UAAqD;AAA1CC,eAAW,EAAC,UAA8B;+DAAVH,gBAAQI;AAAE,GAAjE;;AAAA,oBAAuDJ,kBAC5CA,4BAAXF,oBAAiD,KAAjD,cAAiDO,iBAAdL,UAAc,CAAjD,EAAwC;AAAA;AAAxC,0CACAM,YACAC,8EANF;;AAAA","names":["_createElementVNode","class","_createElementBlock","onSubmit","_ctx","_hoisted_1","type","placeholder","$event","_toDisplayString","_hoisted_3","_createCommentVNode"],"sourceRoot":"","sources":["/home/saumya/Documents/Vue-3/project-tech/src/views/auth/login.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <h3>Login</h3>\n    <input type=\"email\" placeholder=\"Email\" v-model=\"email\">\n    <input type=\"password\" placeholder=\"Password\" v-model=\"password\">\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n    <button>Log in</button>\n    <!-- <button v-if=\"isPending\" disabled>Loading</button> -->\n  </form>\n</template>\n\n<script>\n// using @ means start at the project src root\nimport useLogin from '@/composables/useLogin'\nimport { ref } from 'vue'\n\nexport default {\n//   setup() {\n//     const { error, login } = useLogin()\n//     const router = useRouter()\n\n//     const email = ref('')\n//     const password = ref('')\n\n//     const handleSubmit = async () => {\n//       const res = await login(email.value, password.value)\n//       if (!error.value) {\n//         console.log('user logged in!')\n//       }\n//     }\n\n//     return { email, password, handleSubmit, error}\n//   }\n}\n</script>"]},"metadata":{},"sourceType":"module"}