{"ast":null,"code":"// import AddSong from '@/components/AddSong.vue'\n// import useStorage from '@/composables/useStorage'\n// import useDocument from '@/composables/useDocument'\nimport getDocument from '@/composables/getDocument';\nimport getUser from '@/composables/getUser';\nimport { computed } from 'vue'; // import { useRouter } from 'vue-router'\n\nexport default {\n  props: ['id'],\n\n  //   components: { AddSong },\n  setup(props) {\n    const {\n      error,\n      document: projectlist\n    } = getDocument('projectlists', props.id);\n    const {\n      user\n    } = getUser(); // const { deleteDoc, updateDoc } = useDocument('playlists', props.id)\n    // const { deleteImage } = useStorage()\n    // const router = useRouter()\n\n    const ownership = computed(() => {\n      return projectlist.value && user.value && user.value.uid == projectlist.value.userId;\n    }); // const handleDelete = async () => {\n    //   await deleteDoc()\n    //   await deleteImage(playlist.value.filePath)\n    //   router.push({ name: 'Home' })\n    // }\n    // const handleClick = async (id) => {\n    //   const songs = playlist.value.songs.filter((song) => song.id != id)\n    //   await updateDoc({ songs })\n    // }\n\n    return {\n      error,\n      projectlist,\n      ownership\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA0CA;AACA;AACA;AACA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,KAAzB,C,CACA;;AAEA,eAAe;AACbC,OAAK,EAAE,CAAC,IAAD,CADM;;AAEf;AACEC,OAAK,CAACD,KAAD,EAAQ;AACX,UAAM;AAAEE,WAAF;AAASC,cAAQ,EAAEC;AAAnB,QAAkCP,WAAW,CAAC,cAAD,EAAiBG,KAAK,CAACK,EAAvB,CAAnD;AACA,UAAM;AAAEC;AAAF,QAAWR,OAAO,EAAxB,CAFW,CAGX;AACA;AACA;;AAEA,UAAMS,SAAQ,GAAIR,QAAQ,CAAC,MAAM;AAC/B,aAAOK,WAAW,CAACI,KAAZ,IACFF,IAAI,CAACE,KADH,IAEFF,IAAI,CAACE,KAAL,CAAWC,GAAX,IAAkBL,WAAW,CAACI,KAAZ,CAAkBE,MAFzC;AAGD,KAJyB,CAA1B,CAPW,CAaX;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,WAAO;AAAER,WAAF;AAASE,iBAAT;AAAsBG;AAAtB,KAAP;AACF;;AA5Ba,CAAf","names":["getDocument","getUser","computed","props","setup","error","document","projectlist","id","user","ownership","value","uid","userId"],"sourceRoot":"","sources":["/home/saumya/Documents/Project.Tech/project-tech/src/views/projectlists/ProjectlistDetails.vue"],"sourcesContent":["<template>\n  <div>\n      <div class=\"error\" v-if=\"error\">{{ error }}</div>\n      <div v-if=\"projectlist \" class=\"playlist-details\">\n            <div class=\"playlist-info\">\n              <div class=\"cover\">\n                  <img :src=\"projectlist.coverUrl\">\n              </div>\n              <h2>{{ projectlist.title }}</h2>\n              <p class=\"username\">Created by {{ projectlist.userName }}</p>\n              <p class=\"description\">{{ projectlist.description }}</p>\n              <button v-if=\"ownership\">Delete Projectlist</button>\n            </div>\n      </div>\n      <!-- <div class=\"error\" v-if=\"error\">{{ error }}</div>\n        <div v-if=\"playlist\" class=\"playlist-details\">\n            <div class=\"playlist-info\">\n            <div class=\"cover\">\n                <img :src=\"playlist.coverUrl\">\n            </div>\n            <h2>{{ playlist.title }}</h2>\n            <p class=\"username\">Created by {{ playlist.userName }}</p>\n            <p class=\"description\">{{ playlist.description }}</p>\n            <button v-if=\"ownership\" @click=\"handleDelete\">Delete Playlist</button>\n            </div>\n            <div class=\"song-list\">\n            <div v-if=\"!playlist.songs.length\">No songs have been added to this playlist yet.</div>\n            <div v-for=\"song in playlist.songs\" :key=\"song.id\" class=\"single-song\">\n                <div class=\"details\">\n                <h3>{{ song.title }}</h3>\n                <p>{{ song.artist }}</p>\n                </div>\n                <button v-if=\"ownership\" @click=\"handleClick(song.id)\">delete</button>\n            </div>\n            <AddSong :playlist=\"playlist\" />\n            </div>\n            \n        </div> -->\n  </div>\n</template>\n\n<script>\n// import AddSong from '@/components/AddSong.vue'\n// import useStorage from '@/composables/useStorage'\n// import useDocument from '@/composables/useDocument'\nimport getDocument from '@/composables/getDocument'\nimport getUser from '@/composables/getUser'\nimport { computed } from 'vue'\n// import { useRouter } from 'vue-router'\n\nexport default {\n  props: ['id'],\n//   components: { AddSong },\n  setup(props) {\n    const { error, document: projectlist} = getDocument('projectlists', props.id)\n    const { user } = getUser()\n    // const { deleteDoc, updateDoc } = useDocument('playlists', props.id)\n    // const { deleteImage } = useStorage()\n    // const router = useRouter()\n\n    const ownership = computed(() => {\n      return projectlist.value \n        && user.value \n        && user.value.uid == projectlist.value.userId\n    })\n\n    // const handleDelete = async () => {\n    //   await deleteDoc()\n    //   await deleteImage(playlist.value.filePath)\n    //   router.push({ name: 'Home' })\n    // }\n\n    // const handleClick = async (id) => {\n    //   const songs = playlist.value.songs.filter((song) => song.id != id)\n    //   await updateDoc({ songs })\n    // }\n\n    return { error, projectlist, ownership}\n  }\n}\n</script>\n\n<style>\n  .playlist-details {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 80px;\n  }\n  .cover {\n    overflow: hidden;\n    border-radius: 20px;\n    position: relative;\n    padding: 160px;\n  }\n  .cover img {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    min-width: 100%;\n    min-height: 100%;\n    max-width: 200%;\n    max-height: 200%;\n  }\n  .playlist-info {\n    text-align: center;\n  }\n  .playlist-info h2 {\n    text-transform: capitalize;\n    font-size: 28px;\n    margin-top: 20px;\n  }\n  .playlist-info p {\n    margin-bottom: 20px;\n  }\n  .username {\n    color: #999;\n  }\n  .description {\n    text-align: left;\n  }\n  .single-song {\n    padding: 10px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px dashed var(--secondary);\n    margin-bottom: 20px;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}