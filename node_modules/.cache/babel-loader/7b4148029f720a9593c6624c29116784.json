{"ast":null,"code":"import _objectSpread from \"/home/saumya/Documents/Project.Tech/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { watchEffect, ref } from 'vue';\nimport { projectFirestore } from '../firebase/config';\n\nvar getDocument = function getDocument(collection, id) {\n  var document = ref(null);\n  var error = ref(null); // register the firestore collection reference\n\n  var documentRef = projectFirestore.collection(collection).doc(id);\n  var unsub = documentRef.onSnapshot(function (doc) {\n    // need to make sure the doc exists & has data\n    if (doc.data()) {\n      document.value = _objectSpread(_objectSpread({}, doc.data()), {}, {\n        id: doc.id\n      });\n      error.value = null;\n    } else {\n      error.value = 'that document does not exist';\n    }\n  }, function (err) {\n    console.log(err.message);\n    error.value = 'problem fetching the document';\n  });\n  watchEffect(function (onInvalidate) {\n    onInvalidate(function () {\n      return unsub();\n    });\n  });\n  return {\n    error: error,\n    document: document\n  };\n};\n\nexport default getDocument;","map":{"version":3,"sources":["/home/saumya/Documents/Project.Tech/src/composables/getDocument.js"],"names":["watchEffect","ref","projectFirestore","getDocument","collection","id","document","error","documentRef","doc","unsub","onSnapshot","data","value","err","console","log","message","onInvalidate"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,GAAtB,QAAiC,KAAjC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAaC,EAAb,EAAoB;AAEtC,MAAIC,QAAQ,GAAGL,GAAG,CAAC,IAAD,CAAlB;AACA,MAAIM,KAAK,GAAGN,GAAG,CAAC,IAAD,CAAf,CAHsC,CAKtC;;AACA,MAAIO,WAAW,GAAGN,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,EAAwCK,GAAxC,CAA4CJ,EAA5C,CAAlB;AAEA,MAAMK,KAAK,GAAGF,WAAW,CAACG,UAAZ,CAAuB,UAAAF,GAAG,EAAI;AAC1C;AACA,QAAGA,GAAG,CAACG,IAAJ,EAAH,EAAe;AACbN,MAAAA,QAAQ,CAACO,KAAT,mCAAqBJ,GAAG,CAACG,IAAJ,EAArB;AAAiCP,QAAAA,EAAE,EAAEI,GAAG,CAACJ;AAAzC;AACAE,MAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACD,KAHD,MAIK;AACHN,MAAAA,KAAK,CAACM,KAAN,GAAc,8BAAd;AACD;AACF,GATa,EASX,UAAAC,GAAG,EAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAV,IAAAA,KAAK,CAACM,KAAN,GAAc,+BAAd;AACD,GAZa,CAAd;AAcAb,EAAAA,WAAW,CAAC,UAACkB,YAAD,EAAkB;AAC5BA,IAAAA,YAAY,CAAC;AAAA,aAAMR,KAAK,EAAX;AAAA,KAAD,CAAZ;AACD,GAFU,CAAX;AAIA,SAAO;AAAEH,IAAAA,KAAK,EAALA,KAAF;AAASD,IAAAA,QAAQ,EAARA;AAAT,GAAP;AAED,CA5BD;;AA8BA,eAAeH,WAAf","sourcesContent":["import { watchEffect, ref } from 'vue'\nimport { projectFirestore } from '../firebase/config'\n\nconst getDocument = (collection, id) => {\n\n  let document = ref(null)\n  let error = ref(null)\n\n  // register the firestore collection reference\n  let documentRef = projectFirestore.collection(collection).doc(id)\n\n  const unsub = documentRef.onSnapshot(doc => {\n    // need to make sure the doc exists & has data\n    if(doc.data()) {\n      document.value = {...doc.data(), id: doc.id}\n      error.value = null\n    }\n    else {\n      error.value = 'that document does not exist'\n    }\n  }, err => {\n    console.log(err.message)\n    error.value = 'problem fetching the document'\n  })\n\n  watchEffect((onInvalidate) => {\n    onInvalidate(() => unsub())\n  });\n\n  return { error, document }\n\n}\n\nexport default getDocument"]},"metadata":{},"sourceType":"module"}