{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Create a New Projectlist\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Upload Playlist Cover Image\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1,\n  disabled: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    required: \"\",\n    placeholder: \"Projectlist title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.title = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.title]]), _withDirectives(_createElementVNode(\"textarea\", {\n    required: \"\",\n    placeholder: \"Projectlist description...\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.description = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.description]]), _createCommentVNode(\" upload projectlist image \"), _hoisted_2, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $setup.handleChange && $setup.handleChange(...args))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($setup.fileError), 1\n  /* TEXT */\n  ), !$setup.isPending ? (_openBlock(), _createElementBlock(\"button\", _hoisted_4, \"Create\")) : (_openBlock(), _createElementBlock(\"button\", _hoisted_5, \"Saving...\"))], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;gCAGMA,oBAAiC,IAAjC,EAAiC,IAAjC,EAAI,0BAAJ,EAA4B;AAAA;AAA5B;;gCAIAA,oBAA0C,OAA1C,EAA0C,IAA1C,EAAO,6BAAP,EAAkC;AAAA;AAAlC;;;AAEKC,OAAK,EAAC;;;;;;;AAGIC,UAAQ,EAAR;;;uBAXnBC,oBAaM,KAbN,EAaM,IAbN,EAaM,CAZJH,oBAWO,MAXP,EAWO;AAXAI,YAAM,wDAAUC,mDAAV,EAAsB,WAAtB;AAWN,GAXP,GACEC,4BACAN,oBAA4E,OAA5E,EAA4E;AAArEO,QAAI,EAAC,MAAgE;AAAzDC,YAAQ,EAAR,EAAyD;AAAhDC,eAAW,EAAC,mBAAoC;+DAAPJ,eAAKK;AAAE,GAA5E;;AAAA,oBAAqEL,iCACrEL,oBAA6F,UAA7F,EAA6F;AAAnFQ,YAAQ,EAAR,EAAmF;AAA1EC,eAAW,EAAC,4BAA8D;+DAAxBJ,qBAAWK;AAAa,GAA7F;;AAAA,oBAAqEL,uBACrEM,mDACAC,YACAZ,oBAA0C,OAA1C,EAA0C;AAAnCO,QAAI,EAAC,MAA8B;AAAtBM,YAAM,yCAAER,mDAAF;AAAgB,GAA1C;;AAAA,KACAL,oBAAwC,KAAxC,cAAwCc,iBAAlBT,gBAAkB,CAAxC,EAA+B;AAAA;AAA/B,MAEeA,kCAAfF,oBAAyC,QAAzC,EAAyCY,UAAzC,EAA0B,QAA1B,oBACAZ,oBAA0C,QAA1C,cAAwB,WAAxB,GAVF;;AAAA,GAYI,CAbN","names":["_createElementVNode","class","disabled","_createElementBlock","onSubmit","$setup","_hoisted_1","type","required","placeholder","$event","_createCommentVNode","_hoisted_2","onChange","_toDisplayString","_hoisted_4"],"sourceRoot":"","sources":["/home/saumya/Documents/Project.Tech/project-tech/src/views/projectlists/CreateProjectlist.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"handleSubmit\">\n      <h4>Create a New Projectlist</h4>\n      <input type=\"text\" required placeholder=\"Projectlist title\" v-model=\"title\">\n      <textarea required placeholder=\"Projectlist description...\" v-model=\"description\"></textarea>\n      <!-- upload projectlist image -->\n      <label>Upload Playlist Cover Image</label>\n      <input type=\"file\" @change=\"handleChange\">\n      <div class=\"error\">{{ fileError }}</div>\n\n      <button v-if=\"!isPending\">Create</button>\n      <button v-else disabled>Saving...</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useStorage from '@/composables/useStorage'\nimport useCollection from '@/composables/useCollection'\nimport getUser from '@/composables/getUser'\nimport { timestamp } from '@/firebase/config'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  setup() {\n    const { filePath, url, uploadImage } = useStorage()\n    const { error, addDoc } = useCollection('projectlists')\n    const { user } = getUser()\n    const router = useRouter()\n\n    const title = ref('')\n    const description = ref('')\n    const file = ref(null)\n    const fileError = ref(null)\n    const isPending = ref(false)\n\n    const handleSubmit = async () => {\n      if (file.value) {\n        isPending.value = true\n        await uploadImage(file.value)\n        const res = await addDoc({\n          title: title.value,\n          description: description.value,\n          userId: user.value.uid,\n          userName: user.value.displayName,\n          coverUrl: url.value,\n          filePath: filePath.value, // so we can delete it later\n          songs: [],\n          createdAt: timestamp()\n        })\n        isPending.value = false\n        if (!error.value) {\n          router.push({ name: 'PlaylistDetails', params: { id: res.id }})\n        }\n      }\n    }\n\n    // allowed file types\n    const types = ['image/png', 'image/jpeg']\n\n    const handleChange = (e) => {\n      let selected = e.target.files[0]\n      console.log(selected)\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected\n        fileError.value = null\n      } else {\n        file.value = null\n        fileError.value = 'Please select an image file (png or jpg)'\n      }\n    }\n    \n    return { title, description, handleSubmit, fileError, handleChange, isPending }\n  }\n}\n</script>\n\n<style>\n  form {\n    background: white;\n  }\n  input[type=\"file\"] {\n    border: 0;\n    padding: 0;\n  }\n  label {\n    font-size: 12px;\n    display: block;\n    margin-top: 30px;\n  }\n  button {\n    margin-top: 20px;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}