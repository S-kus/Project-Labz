{"ast":null,"code":"import AddProject from '@/components/AddProject.vue';\nimport useStorage from '@/composables/useStorage';\nimport useDocument from '@/composables/useDocument';\nimport getDocument from '@/composables/getDocument';\nimport getUser from '@/composables/getUser';\nimport { computed } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  props: ['id'],\n  components: {\n    AddProject\n  },\n\n  setup(props) {\n    const {\n      error,\n      document: projectlist\n    } = getDocument('projectlists', props.id);\n    const {\n      user\n    } = getUser();\n    const {\n      deleteDoc\n    } = useDocument('projectlists', props.id);\n    const {\n      deleteImage\n    } = useStorage();\n    const router = useRouter();\n    const ownership = computed(() => {\n      return projectlist.value && user.value && user.value.uid == projectlist.value.userId;\n    });\n\n    const handleDelete = async () => {\n      await deleteDoc();\n      await deleteImage(projectlist.value.filePath);\n      router.push({\n        name: 'Home'\n      });\n    };\n\n    const handleClick = async id => {\n      const projects = projectlist.value.projects.filter(project => project.id != id);\n      await updateDoc({\n        projects\n      });\n    };\n\n    return {\n      error,\n      projectlist,\n      ownership,\n      handleDelete,\n      handleClick\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA6BA,OAAOA,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,KAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,eAAe;AACbC,OAAK,EAAE,CAAC,IAAD,CADM;AAEbC,YAAU,EAAE;AAAER;AAAF,GAFC;;AAGbS,OAAK,CAACF,KAAD,EAAQ;AACX,UAAM;AAAEG,WAAF;AAASC,cAAQ,EAAEC;AAAnB,QAAkCT,WAAW,CAAC,cAAD,EAAiBI,KAAK,CAACM,EAAvB,CAAnD;AACA,UAAM;AAAEC;AAAF,QAAWV,OAAO,EAAxB;AACA,UAAM;AAAEW;AAAF,QAAeb,WAAW,CAAC,cAAD,EAAiBK,KAAK,CAACM,EAAvB,CAAhC;AACA,UAAM;AAAEG;AAAF,QAAkBf,UAAU,EAAlC;AACA,UAAMgB,MAAK,GAAIX,SAAS,EAAxB;AAEA,UAAMY,SAAQ,GAAIb,QAAQ,CAAC,MAAM;AAC/B,aAAOO,WAAW,CAACO,KAAZ,IACFL,IAAI,CAACK,KADH,IAEFL,IAAI,CAACK,KAAL,CAAWC,GAAX,IAAkBR,WAAW,CAACO,KAAZ,CAAkBE,MAFzC;AAGD,KAJyB,CAA1B;;AAMA,UAAMC,YAAW,GAAI,YAAY;AAC/B,YAAMP,SAAS,EAAf;AACA,YAAMC,WAAW,CAACJ,WAAW,CAACO,KAAZ,CAAkBI,QAAnB,CAAjB;AACAN,YAAM,CAACO,IAAP,CAAY;AAAEC,YAAI,EAAE;AAAR,OAAZ;AACF,KAJA;;AAMA,UAAMC,WAAU,GAAI,MAAOb,EAAP,IAAc;AAChC,YAAMc,QAAO,GAAIf,WAAW,CAACO,KAAZ,CAAkBQ,QAAlB,CAA2BC,MAA3B,CAAmCC,OAAD,IAAaA,OAAO,CAAChB,EAAR,IAAcA,EAA7D,CAAjB;AACA,YAAMiB,SAAS,CAAC;AAAEH;AAAF,OAAD,CAAf;AACF,KAHA;;AAKA,WAAO;AAAEjB,WAAF;AAASE,iBAAT;AAAsBM,eAAtB;AAAiCI,kBAAjC;AAA+CI;AAA/C,KAAP;AACF;;AA5Ba,CAAf","names":["AddProject","useStorage","useDocument","getDocument","getUser","computed","useRouter","props","components","setup","error","document","projectlist","id","user","deleteDoc","deleteImage","router","ownership","value","uid","userId","handleDelete","filePath","push","name","handleClick","projects","filter","project","updateDoc"],"sourceRoot":"","sources":["/home/saumya/Documents/Project.Tech/project-tech/src/views/projectlists/ProjectlistDetails.vue"],"sourcesContent":["<template>\n  <div>\n      <div class=\"error\" v-if=\"error\">{{ error }}</div>\n          <div v-if=\"projectlist \" class=\"playlist-details\">\n            <div class=\"playlist-info\">\n              <div class=\"cover\">\n                  <img :src=\"projectlist.coverUrl\">\n              </div>\n              <h2>{{ projectlist.title }}</h2>\n              <p class=\"username\">Created by {{ projectlist.userName }}</p>\n              <p class=\"description\">{{ projectlist.description }}</p>\n              <button v-if=\"ownership\" @click=\"handleDelete\">Delete Projectlist</button>\n            </div>\n          </div>\n          <div class=\"song-list\">\n            <div v-if=\"!projectlist.songs.length\">No projects have been added to this projectlist yet.</div>\n            <div v-for=\"project in projectlist.songs\" :key=\"project.id\" class=\"single-song\">\n                <div class=\"details\">\n                <h3>{{ project.title }}</h3>\n                <p>{{ project.artist }}</p>\n                </div>\n                <button v-if=\"ownership\" @click=\"handleClick(song.id)\">Delete</button>\n            </div>\n            <AddProject/>\n          </div>\n  </div>\n</template>\n\n<script>\nimport AddProject from '@/components/AddProject.vue'\nimport useStorage from '@/composables/useStorage'\nimport useDocument from '@/composables/useDocument'\nimport getDocument from '@/composables/getDocument'\nimport getUser from '@/composables/getUser'\nimport { computed } from 'vue'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  props: ['id'],\n  components: { AddProject },\n  setup(props) {\n    const { error, document: projectlist} = getDocument('projectlists', props.id)\n    const { user } = getUser()\n    const { deleteDoc} = useDocument('projectlists', props.id)\n    const { deleteImage } = useStorage()\n    const router = useRouter()\n\n    const ownership = computed(() => {\n      return projectlist.value \n        && user.value \n        && user.value.uid == projectlist.value.userId\n    })\n\n    const handleDelete = async () => {\n      await deleteDoc()\n      await deleteImage(projectlist.value.filePath)\n      router.push({ name: 'Home' })\n    }\n\n    const handleClick = async (id) => {\n      const projects = projectlist.value.projects.filter((project) => project.id != id)\n      await updateDoc({ projects })\n    }\n\n    return { error, projectlist, ownership, handleDelete, handleClick}\n  }\n}\n</script>\n\n<style>\n  .playlist-details {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 80px;\n  }\n  .cover {\n    overflow: hidden;\n    border-radius: 20px;\n    position: relative;\n    padding: 160px;\n  }\n  .cover img {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    min-width: 100%;\n    min-height: 100%;\n    max-width: 200%;\n    max-height: 200%;\n  }\n  .playlist-info {\n    text-align: center;\n  }\n  .playlist-info h2 {\n    text-transform: capitalize;\n    font-size: 28px;\n    margin-top: 20px;\n  }\n  .playlist-info p {\n    margin-bottom: 20px;\n  }\n  .username {\n    color: #999;\n  }\n  .description {\n    text-align: left;\n  }\n  .single-song {\n    padding: 10px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px dashed var(--secondary);\n    margin-bottom: 20px;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}