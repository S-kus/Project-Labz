{"ast":null,"code":"// import AddSong from '@/components/AddSong.vue'\n// import useStorage from '@/composables/useStorage'\n// import useDocument from '@/composables/useDocument'\n// import getDocument from '@/composables/getDocument'\n// import getUser from '@/composables/getUser'\n// import { computed } from 'vue'\n// import { useRouter } from 'vue-router'\nexport default {\n  props: ['id'],\n\n  //   components: { AddSong },\n  setup(props) {\n    const {\n      error,\n      document: playlist\n    } = getDocument('playlists', props.id);\n    const {\n      user\n    } = getUser();\n    const {\n      deleteDoc,\n      updateDoc\n    } = useDocument('playlists', props.id);\n    const {\n      deleteImage\n    } = useStorage();\n    const router = useRouter();\n    const ownership = computed(() => {\n      return playlist.value && user.value && user.value.uid == playlist.value.userId;\n    });\n\n    const handleDelete = async () => {\n      await deleteDoc();\n      await deleteImage(playlist.value.filePath);\n      router.push({\n        name: 'Home'\n      });\n    };\n\n    const handleClick = async id => {\n      const songs = playlist.value.songs.filter(song => song.id != id);\n      await updateDoc({\n        songs\n      });\n    };\n\n    return {\n      error,\n      playlist,\n      ownership,\n      handleDelete,\n      handleClick\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe;AACbA,OAAK,EAAE,CAAC,IAAD,CADM;;AAEf;AACEC,OAAK,CAACD,KAAD,EAAQ;AACX,UAAM;AAAEE,WAAF;AAASC,cAAQ,EAAEC;AAAnB,QAAgCC,WAAW,CAAC,WAAD,EAAcL,KAAK,CAACM,EAApB,CAAjD;AACA,UAAM;AAAEC;AAAF,QAAWC,OAAO,EAAxB;AACA,UAAM;AAAEC,eAAF;AAAaC;AAAb,QAA2BC,WAAW,CAAC,WAAD,EAAcX,KAAK,CAACM,EAApB,CAA5C;AACA,UAAM;AAAEM;AAAF,QAAkBC,UAAU,EAAlC;AACA,UAAMC,MAAK,GAAIC,SAAS,EAAxB;AAEA,UAAMC,SAAQ,GAAIC,QAAQ,CAAC,MAAM;AAC/B,aAAOb,QAAQ,CAACc,KAAT,IACFX,IAAI,CAACW,KADH,IAEFX,IAAI,CAACW,KAAL,CAAWC,GAAX,IAAkBf,QAAQ,CAACc,KAAT,CAAeE,MAFtC;AAGD,KAJyB,CAA1B;;AAMA,UAAMC,YAAW,GAAI,YAAY;AAC/B,YAAMZ,SAAS,EAAf;AACA,YAAMG,WAAW,CAACR,QAAQ,CAACc,KAAT,CAAeI,QAAhB,CAAjB;AACAR,YAAM,CAACS,IAAP,CAAY;AAAEC,YAAI,EAAE;AAAR,OAAZ;AACF,KAJA;;AAMA,UAAMC,WAAU,GAAI,MAAOnB,EAAP,IAAc;AAChC,YAAMoB,KAAI,GAAItB,QAAQ,CAACc,KAAT,CAAeQ,KAAf,CAAqBC,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACtB,EAAL,IAAWA,EAAjD,CAAd;AACA,YAAMI,SAAS,CAAC;AAAEgB;AAAF,OAAD,CAAf;AACF,KAHA;;AAKA,WAAO;AAAExB,WAAF;AAASE,cAAT;AAAmBY,eAAnB;AAA8BK,kBAA9B;AAA4CI;AAA5C,KAAP;AACF;;AA5Ba,CAAf","names":["props","setup","error","document","playlist","getDocument","id","user","getUser","deleteDoc","updateDoc","useDocument","deleteImage","useStorage","router","useRouter","ownership","computed","value","uid","userId","handleDelete","filePath","push","name","handleClick","songs","filter","song"],"sourceRoot":"","sources":["/home/saumya/Documents/Project.Tech/project-tech/src/views/projectlists/ProjectlistDetails.vue"],"sourcesContent":["<template>\n  <div>\n      <p>Hello</p>\n  </div>\n</template>\n\n<script>\n// import AddSong from '@/components/AddSong.vue'\n// import useStorage from '@/composables/useStorage'\n// import useDocument from '@/composables/useDocument'\n// import getDocument from '@/composables/getDocument'\n// import getUser from '@/composables/getUser'\n// import { computed } from 'vue'\n// import { useRouter } from 'vue-router'\n\nexport default {\n  props: ['id'],\n//   components: { AddSong },\n  setup(props) {\n    const { error, document: playlist } = getDocument('playlists', props.id)\n    const { user } = getUser()\n    const { deleteDoc, updateDoc } = useDocument('playlists', props.id)\n    const { deleteImage } = useStorage()\n    const router = useRouter()\n\n    const ownership = computed(() => {\n      return playlist.value \n        && user.value \n        && user.value.uid == playlist.value.userId\n    })\n\n    const handleDelete = async () => {\n      await deleteDoc()\n      await deleteImage(playlist.value.filePath)\n      router.push({ name: 'Home' })\n    }\n\n    const handleClick = async (id) => {\n      const songs = playlist.value.songs.filter((song) => song.id != id)\n      await updateDoc({ songs })\n    }\n\n    return { error, playlist, ownership, handleDelete, handleClick }\n  }\n}\n</script>\n\n<style>\n  .playlist-details {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 80px;\n  }\n  .cover {\n    overflow: hidden;\n    border-radius: 20px;\n    position: relative;\n    padding: 160px;\n  }\n  .cover img {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    min-width: 100%;\n    min-height: 100%;\n    max-width: 200%;\n    max-height: 200%;\n  }\n  .playlist-info {\n    text-align: center;\n  }\n  .playlist-info h2 {\n    text-transform: capitalize;\n    font-size: 28px;\n    margin-top: 20px;\n  }\n  .playlist-info p {\n    margin-bottom: 20px;\n  }\n  .username {\n    color: #999;\n  }\n  .description {\n    text-align: left;\n  }\n  .single-song {\n    padding: 10px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px dashed var(--secondary);\n    margin-bottom: 20px;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}