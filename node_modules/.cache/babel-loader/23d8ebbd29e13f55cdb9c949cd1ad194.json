{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Sign up\", -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"error\"\n};\nvar _hoisted_3 = {\n  key: 1\n};\nvar _hoisted_4 = {\n  key: 2,\n  disabled: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers(function () {\n      return $setup.handleSubmit && $setup.handleSubmit.apply($setup, arguments);\n    }, [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Display name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.displayName = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.displayName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.email = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $setup.password = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.password]]), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), !$setup.isPending ? (_openBlock(), _createElementBlock(\"button\", _hoisted_3, \"Sign up\")) : _createCommentVNode(\"v-if\", true), $setup.isPending ? (_openBlock(), _createElementBlock(\"button\", _hoisted_4, \"Loading\")) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;8BAEIA,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW;AAAA;AAAX;;;;AAIkB,WAAM;;;;;;;AAECC,UAAQ,EAAR;;;uBAP3BC,oBAQO,MARP,EAQO;AARAC,YAAM;AAAA,aAAUC,mEAAV;AAAA,OAAsB,WAAtB;AAQN,GARP,GACEC,4BACAL,oBAAoE,OAApE,EAAoE;AAA7DM,QAAI,EAAC,MAAwD;AAAjDC,eAAW,EAAC,cAAqC;;aAAbH,qBAAWI;;AAAE,GAApE;;AAAA,oBAAuDJ,uCACvDJ,oBAAwD,OAAxD,EAAwD;AAAjDM,QAAI,EAAC,OAA4C;AAApCC,eAAW,EAAC,OAAwB;;aAAPH,eAAKI;;AAAE,GAAxD;;AAAA,oBAAiDJ,iCACjDJ,oBAAiE,OAAjE,EAAiE;AAA1DM,QAAI,EAAC,UAAqD;AAA1CC,eAAW,EAAC,UAA8B;;aAAVH,kBAAQI;;AAAE,GAAjE;;AAAA,oBAAuDJ,oBAC5CA,8BAAXF,oBAAiD,KAAjD,cAAiDO,iBAAdL,YAAc,CAAjD,EAAwC;AAAA;AAAxC,2CACeA,kCAAfF,oBAA0C,QAA1C,EAA0CQ,UAA1C,EAA0B,SAA1B,wCACcN,kCAAdF,oBAAkD,QAAlD,cAAkC,SAAlC,uCAPF;;AAAA","names":["_createElementVNode","disabled","_createElementBlock","onSubmit","$setup","_hoisted_1","type","placeholder","$event","_toDisplayString","_hoisted_3"],"sourceRoot":"","sources":["/home/saumya/Documents/Project.Tech/src/views/auth/Signup.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <h3>Sign up</h3>\n    <input type=\"text\" placeholder=\"Display name\" v-model=\"displayName\">\n    <input type=\"email\" placeholder=\"Email\" v-model=\"email\">\n    <input type=\"password\" placeholder=\"Password\" v-model=\"password\">\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n    <button v-if=\"!isPending\">Sign up</button>\n    <button v-if=\"isPending\" disabled>Loading</button>\n  </form>\n</template>\n\n<script>\nimport useSignup from '@/composables/useSignup'\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  setup() {\n    const { error, signup, isPending } = useSignup()\n    const router = useRouter()\n\n    const email = ref('')\n    const password = ref('')\n    const displayName = ref('')\n\n    const handleSubmit = async () => {\n      const res = await signup(email.value, password.value, displayName.value)\n      if (!error.value) {\n          console.log('User Signed Up!')\n        router.push({ name: 'UserProjectlists' })\n      }\n    }\n\n    return { email, password, displayName, handleSubmit, error, isPending }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}