{"ast":null,"code":"import _asyncToGenerator from \"/home/saumya/Documents/Project.Tech/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { ref } from 'vue';\nimport useStorage from '@/composables/useStorage';\nimport useCollection from '@/composables/useCollection';\nimport getUser from '@/composables/getUser';\nimport { timestamp } from '@/firebase/config';\nimport { useRouter } from 'vue-router';\nexport default {\n  setup: function setup() {\n    var _useStorage = useStorage(),\n        filePath = _useStorage.filePath,\n        url = _useStorage.url,\n        uploadImage = _useStorage.uploadImage;\n\n    var _useCollection = useCollection('projectlists'),\n        error = _useCollection.error,\n        addDoc = _useCollection.addDoc;\n\n    var _getUser = getUser(),\n        user = _getUser.user;\n\n    var router = useRouter();\n    var title = ref('');\n    var description = ref('');\n    var file = ref(null);\n    var fileError = ref(null);\n    var isPending = ref(false);\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!file.value) {\n                  _context.next = 9;\n                  break;\n                }\n\n                isPending.value = true;\n                _context.next = 4;\n                return uploadImage(file.value);\n\n              case 4:\n                _context.next = 6;\n                return addDoc({\n                  title: title.value,\n                  description: description.value,\n                  userId: user.value.uid,\n                  userName: user.value.displayName,\n                  coverUrl: url.value,\n                  filePath: filePath.value,\n                  // so we can delete it later\n                  projects: [],\n                  createdAt: timestamp()\n                });\n\n              case 6:\n                res = _context.sent;\n                isPending.value = false;\n\n                if (!error.value) {\n                  router.push({\n                    name: 'ProjectlistDetails',\n                    params: {\n                      id: res.id\n                    }\n                  });\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }(); // allowed file types\n\n\n    var types = ['image/png', 'image/jpeg'];\n\n    var handleChange = function handleChange(e) {\n      var selected = e.target.files[0];\n      console.log(selected);\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected;\n        fileError.value = null;\n      } else {\n        file.value = null;\n        fileError.value = 'Please select an image file (png or jpeg)';\n      }\n    };\n\n    return {\n      title: title,\n      description: description,\n      handleSubmit: handleSubmit,\n      fileError: fileError,\n      handleChange: handleChange,\n      isPending: isPending\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","useStorage","useCollection","getUser","timestamp","useRouter","setup","filePath","url","uploadImage","error","addDoc","user","router","title","description","file","fileError","isPending","handleSubmit","value","userId","uid","userName","displayName","coverUrl","projects","createdAt","res","push","name","params","id","types","handleChange","e","selected","target","files","console","log","includes","type"],"sourceRoot":"","sources":["/home/saumya/Documents/Project.Tech/src/views/projectlists/CreateProjectlist.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"handleSubmit\">\n      <h4>Create a New Projectlist</h4>\n      <input type=\"text\" required placeholder=\"Projectlist title\" v-model=\"title\">\n      <textarea required placeholder=\"Projectlist description...\" v-model=\"description\"></textarea>\n      <!-- upload projectlist image -->\n      <label>Upload Projectlist Cover Image</label>\n      <input type=\"file\" @change=\"handleChange\">\n      <div class=\"error\">{{ fileError }}</div>\n\n      <button v-if=\"!isPending\">Create</button>\n      <button v-else disabled>Saving...</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useStorage from '@/composables/useStorage'\nimport useCollection from '@/composables/useCollection'\nimport getUser from '@/composables/getUser'\nimport { timestamp } from '@/firebase/config'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  setup() {\n    const { filePath, url, uploadImage } = useStorage()\n    const { error, addDoc } = useCollection('projectlists')\n    const { user } = getUser()\n    const router = useRouter()\n\n    const title = ref('')\n    const description = ref('')\n    const file = ref(null)\n    const fileError = ref(null)\n    const isPending = ref(false)\n\n    const handleSubmit = async () => {\n      if (file.value) {\n        isPending.value = true\n        await uploadImage(file.value)\n        const res = await addDoc({\n          title: title.value,\n          description: description.value,\n          userId: user.value.uid,\n          userName: user.value.displayName,\n          coverUrl: url.value,\n          filePath: filePath.value, // so we can delete it later\n          projects: [],\n          createdAt: timestamp()\n        })\n        isPending.value = false\n        if (!error.value) {\n          router.push({ name: 'ProjectlistDetails', params: { id: res.id }})\n        }\n      }\n    }\n\n    // allowed file types\n    const types = ['image/png', 'image/jpeg']\n\n    const handleChange = (e) => {\n      let selected = e.target.files[0]\n      console.log(selected)\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected\n        fileError.value = null\n      } else {\n        file.value = null\n        fileError.value = 'Please select an image file (png or jpeg)'\n      }\n    }\n    \n    return { title, description, handleSubmit, fileError, handleChange, isPending }\n  }\n}\n</script>\n\n<style>\n  form {\n    background: white;\n  }\n  input[type=\"file\"] {\n    border: 0;\n    padding: 0;\n  }\n  label {\n    font-size: 12px;\n    display: block;\n    margin-top: 30px;\n  }\n  button {\n    margin-top: 20px;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}